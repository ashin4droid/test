<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="14060" started-at="2018-08-15T08:33:17Z" finished-at="2018-08-15T08:33:31Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="14060" started-at="2018-08-15T08:33:17Z" finished-at="2018-08-15T08:33:31Z">
      <class name="test.TriggerTests">
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:test.TriggerTests@6d78f375]" name="BeforeTest" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:test.TriggerTests@6d78f375]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TriggerTests_TC01_Availability_Admin status=FAILURE method=TriggerTests.TriggerTests_TC01_Availability_Admin()[pri:0, instance:test.TriggerTests@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="TriggerTests_TC01_Availability_Admin()[pri:0, instance:test.TriggerTests@6d78f375]" name="TriggerTests_TC01_Availability_Admin" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at test.TriggerTests.TriggerTests_TC01_Availability_Admin(TriggerTests.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerTests_TC01_Availability_Admin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.TriggerTests@6d78f375]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TriggerTests_TC01_Availability_Admin status=FAILURE method=TriggerTests.TriggerTests_TC01_Availability_Admin()[pri:0, instance:test.TriggerTests@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:test.TriggerTests@6d78f375]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TriggerTests_TC02_Availability_NonAdmin status=SUCCESS method=TriggerTests.TriggerTests_TC02_Availability_NonAdmin()[pri:0, instance:test.TriggerTests@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TriggerTests_TC02_Availability_NonAdmin()[pri:0, instance:test.TriggerTests@6d78f375]" name="TriggerTests_TC02_Availability_NonAdmin" duration-ms="1" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerTests_TC02_Availability_NonAdmin -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:test.TriggerTests@6d78f375]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TriggerTests_TC03_Default_Setup status=SUCCESS method=TriggerTests.TriggerTests_TC03_Default_Setup()[pri:0, instance:test.TriggerTests@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.TriggerTests@6d78f375]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TriggerTests_TC02_Availability_NonAdmin status=SUCCESS method=TriggerTests.TriggerTests_TC02_Availability_NonAdmin()[pri:0, instance:test.TriggerTests@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="TriggerTests_TC03_Default_Setup()[pri:0, instance:test.TriggerTests@6d78f375]" name="TriggerTests_TC03_Default_Setup" duration-ms="0" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TriggerTests_TC03_Default_Setup -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.TriggerTests@6d78f375]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TriggerTests_TC03_Default_Setup status=SUCCESS method=TriggerTests.TriggerTests_TC03_Default_Setup()[pri:0, instance:test.TriggerTests@6d78f375] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TriggerTests -->
      <class name="test.InitializeConfig">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.InitializeConfig@548b7f67]" name="beforeSuite" is-config="true" duration-ms="441" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.InitializeConfig@548b7f67]" name="afterSuite" is-config="true" duration-ms="360" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.InitializeConfig -->
      <class name="test.WorkflowTests">
        <test-method status="FAIL" signature="WorkflowTests_TC01_Availability_Admin()[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="WorkflowTests_TC01_Availability_Admin" duration-ms="16" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at test.WorkflowTests.WorkflowTests_TC01_Availability_Admin(WorkflowTests.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WorkflowTests_TC01_Availability_Admin -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.WorkflowTests.WorkflowTests_TC01_Availability_Admin() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="BeforeTest" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WorkflowTests_TC01_Availability_Admin status=FAILURE method=WorkflowTests.WorkflowTests_TC01_Availability_Admin()[pri:0, instance:test.WorkflowTests@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="WorkflowTests_TC04_GooglePageTest()[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="WorkflowTests_TC04_GooglePageTest" duration-ms="14022" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WorkflowTests_TC04_GooglePageTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-15T14:03:17Z" finished-at="2018-08-15T14:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.WorkflowTests.WorkflowTests_TC04_GooglePageTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.WorkflowTests@7ac7a4e4]" name="tearDown" is-config="true" duration-ms="1" started-at="2018-08-15T14:03:31Z" finished-at="2018-08-15T14:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WorkflowTests_TC04_GooglePageTest status=SUCCESS method=WorkflowTests.WorkflowTests_TC04_GooglePageTest()[pri:0, instance:test.WorkflowTests@7ac7a4e4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.WorkflowTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
